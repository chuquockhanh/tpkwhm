package com.banvien.fcv.webapp.validator;

import com.banvien.fcv.core.domain.Auditor;
import com.banvien.fcv.core.dto.AuditorBean;
import com.banvien.fcv.core.exception.ObjectNotFoundException;
import com.banvien.fcv.core.service.AuditorService;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.support.ApplicationObjectSupport;
import org.springframework.stereotype.Component;
import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;
import org.springframework.validation.Validator;

/**
 * This object is responsible for validating user input parameters from add/edit auditor form
 * @author Vien Nguyen
 *
 */
@Component
public class AuditorValidator extends ApplicationObjectSupport implements Validator {
	private transient final Log log = LogFactory.getLog(AuditorValidator.class);

    private AuditorService auditorService;
    @Autowired
    public void setAuditorService(AuditorService auditorService) {
        this.auditorService = auditorService;
    }

    public boolean supports(Class<?> aClass) {
        return AuditorBean.class.isAssignableFrom(aClass);
    }
    /**
     * This method is called for validating Model Attribute
     */
    public void validate(Object o, Errors errors) {
        AuditorBean cmd = (AuditorBean)o;
        trimingField(cmd);
        validateRequiredValues(cmd, errors);
        validateDuplicate(cmd, errors);
    }

    private void validateRequiredValues(AuditorBean cmd, Errors errors) {
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "pojo.code", "errors.required", new String[] {this.getMessageSourceAccessor().getMessage("support.auditor.form.code")}, "non-empty value required.");
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "pojo.name", "errors.required", new String[] {this.getMessageSourceAccessor().getMessage("support.auditor.form.name")}, "non-empty value required.");
    }

    private void trimingField(AuditorBean cmd) {
        if(StringUtils.isNotEmpty(cmd.getPojo().getCode())) {
    		cmd.getPojo().setCode(cmd.getPojo().getCode().trim());
    	}
    	if(StringUtils.isNotEmpty(cmd.getPojo().getName())) {
    		cmd.getPojo().setName(cmd.getPojo().getName().trim());
    	}

    }

    private void validateDuplicate(AuditorBean cmd, Errors errors) {
    	//SapCode
    	if(StringUtils.isNotBlank(cmd.getPojo().getCode())) {
    		try {
    			Auditor auditor = this.auditorService.findByCode(cmd.getPojo().getCode());
                if(auditor != null) {
                    if(cmd.getPojo().getAuditorID() != null &&
                            !auditor.getAuditorID().equals(cmd.getPojo().getAuditorID()))
                    errors.rejectValue("pojo.code", "error.duplicated", new String[] {this.getMessageSourceAccessor().getMessage("support.auditor.form.code")}, "Value has been chosen.");
                }
    		} catch (ObjectNotFoundException ex) {
    			// true
    		}
    	}

    }


}
